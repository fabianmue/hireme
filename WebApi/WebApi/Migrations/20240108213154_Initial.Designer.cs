// <auto-generated />
using System;
using System.Collections.Generic;
using HireMe.WebApi.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HireMe.WebApi.Migrations
{
    [DbContext(typeof(WebApiContext))]
    [Migration("20240108213154_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HireMe.WebApi.Skills.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()")
                        .HasComment("Time of creation");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("Short, ideally one-word description");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()")
                        .HasComment("Time of last modification");

                    b.Property<int>("Proficiency")
                        .HasColumnType("integer")
                        .HasComment("Rated from 1 to 5, where 5 indicates a high proficiency");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5647),
                            Description = "Full stack web development",
                            Proficiency = 5
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5651),
                            Description = "Scrum",
                            Proficiency = 4
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5652),
                            Description = "DevSecOps",
                            Proficiency = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5653),
                            Description = "CI / CD Pipelines",
                            Proficiency = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5654),
                            Description = "ASP.NET Core",
                            Proficiency = 4
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5655),
                            Description = "Angular",
                            Proficiency = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5656),
                            Description = "GitLab",
                            Proficiency = 2
                        });
                });

            modelBuilder.Entity("HireMe.WebApi.WorkExperiences.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()")
                        .HasComment("Time of creation");

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("Company, institution or alike");

                    b.Property<DateOnly>("From")
                        .HasColumnType("date")
                        .HasComment("Start date");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("Official job title");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("Office location");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()")
                        .HasComment("Time of last modification");

                    b.Property<List<string>>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<DateOnly?>("To")
                        .HasColumnType("date")
                        .HasComment("End date, null means still active");

                    b.HasKey("Id");

                    b.ToTable("WorkExperiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5821),
                            Employer = "GVZ Gebäudeversicherung Kanton Zürich",
                            From = new DateOnly(2022, 3, 1),
                            JobTitle = "Software engineer",
                            Location = "8050 Zürich",
                            Responsibilities = new List<string> { "Full stack web development of multiple applications to manage company core data", "Formation of a software development team; definition and implementation of development processes, evaluation and selection of technologies, quality insurance and testing", "Supervision and training of an apprentice specializing in application development (from 2023)" }
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 8, 21, 31, 53, 955, DateTimeKind.Utc).AddTicks(5825),
                            Employer = "M&F Engineering AG Zürich",
                            From = new DateOnly(2018, 1, 1),
                            JobTitle = "Software engineer in the trainee programme",
                            Location = "8951 Fahrweid",
                            Responsibilities = new List<string> { "Trainee programme for university graduates; collaboration with teams at various partner companies, coaching by senior developers, workshops for hard and soft skills", "Usage of various technologies, application of different development processes, getting to know companies in different industries", "Assignments of 12+ months at AskMeWhy AG, Qualivision AG and EBP Schweiz AG" },
                            To = new DateOnly(2021, 10, 31)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
